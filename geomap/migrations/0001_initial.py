# Generated by Django 2.1.2 on 2018-11-19 05:30

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django_fsm
import geomap.helper_functions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Equiment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=120)),
                ('loopback', models.GenericIPAddressField()),
                ('type', models.CharField(choices=[('Router', 'Router'), ('Switch', 'Switch'), ('OLT', 'OLT'), ('ONT', 'ONT')], max_length=120, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(upload_to=geomap.helper_functions.user_directory_path)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slack_id', models.CharField(blank=True, max_length=120, null=True)),
                ('position', models.CharField(blank=True, max_length=120, null=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('osp_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=120)),
                ('slug', models.SlugField(blank=True, max_length=150, null=True, unique=True, verbose_name='slug')),
                ('units', models.IntegerField(default=1)),
                ('business_unit', models.CharField(blank=True, choices=[('Fision Home', 'Fision Home'), ('Fision Plus', 'Fision Plus'), ('Fision Stay', 'Fision Stay'), ('Fision Encore', 'Fision Encore'), ('Fision Work', 'Fision Work'), ('Fision U', 'Fision U'), ('Demo', 'Demo')], max_length=120, null=True)),
                ('address', models.CharField(max_length=200)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, srid=4326)),
                ('status', django_fsm.FSMIntegerField(choices=[(0, 'Created'), (1, 'Published'), (2, 'Ready for Installs'), (3, 'Ready for CXC'), (4, 'Ready for MR'), (5, 'Completed')], default=0, protected=True)),
                ('type', models.CharField(blank=True, choices=[('New Construction', 'New Construction'), ('Conversion/OverBuild', 'Conversion/OverBuild')], max_length=50, null=True)),
                ('rf_unit', models.BooleanField(default=False, verbose_name='RF In-Unit')),
                ('rf_coa', models.BooleanField(default=False, verbose_name='RF COA')),
                ('coa', models.BooleanField(default=False, verbose_name='COA')),
                ('router', models.CharField(blank=True, choices=[('7600', '7600'), ('ASR9006', 'ASR9006')], max_length=200, null=True)),
                ('r_loop', models.CharField(blank=True, max_length=200, null=True, verbose_name='LB')),
                ('switch', models.CharField(blank=True, choices=[('2960', '2960'), ('ASR920', 'ASR920')], max_length=200, null=True)),
                ('s_loop', models.CharField(blank=True, max_length=200, null=True, verbose_name='Switch LB')),
                ('gpon_chassis', models.IntegerField(blank=True, null=True)),
                ('gpon_cards', models.IntegerField(blank=True, null=True)),
                ('published', models.DateField(blank=True, null=True, verbose_name='Published On')),
                ('fiber_ready', models.DateField(blank=True, null=True, verbose_name='Fiber Ready')),
                ('mdf_ready', models.DateField(blank=True, null=True, verbose_name='MDF Ready')),
                ('network_ready', models.DateField(blank=True, null=True, verbose_name='Router Pickup')),
                ('gpon_ready', models.DateField(blank=True, null=True, verbose_name='Chassis Pickup')),
                ('gear_installed', models.DateField(blank=True, null=True, verbose_name='Installed')),
                ('cross_connect', models.DateField(blank=True, null=True, verbose_name='Cross-Connected')),
                ('sub_id_ready', models.DateField(blank=True, null=True)),
                ('stb_installed', models.DateField(blank=True, null=True)),
                ('mr_cert', models.DateField(blank=True, null=True, verbose_name='MR Cert')),
                ('done', models.DateField(blank=True, null=True, verbose_name='Completed')),
                ('ip_tv_coa', models.CharField(blank=True, max_length=200, null=True, verbose_name='IP TV COA')),
                ('ip_tv', models.CharField(blank=True, max_length=200, null=True, verbose_name='IP TV')),
                ('ip_data', models.CharField(blank=True, max_length=200, null=True, verbose_name='IP DATA')),
                ('ip_voice', models.CharField(blank=True, max_length=200, null=True, verbose_name='IP VOICE')),
                ('ip_mgn_ap', models.CharField(blank=True, max_length=200, null=True, verbose_name='IP MGN AP')),
                ('ip_mgn', models.CharField(blank=True, max_length=200, null=True, verbose_name='IP MGN')),
                ('hld', models.FileField(blank=True, null=True, upload_to=geomap.helper_functions.user_directory_path)),
                ('cpm', models.ForeignKey(blank=True, limit_choices_to=models.Q(groups__name='CPM'), null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cpm', to=settings.AUTH_USER_MODEL, verbose_name='CPM')),
                ('cxceng', models.ForeignKey(blank=True, limit_choices_to=models.Q(groups__name='CXCENG'), null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cxceng', to=settings.AUTH_USER_MODEL, verbose_name='CXC Engineer')),
                ('fe', models.ForeignKey(blank=True, limit_choices_to=models.Q(groups__name='FE'), null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fe', to=settings.AUTH_USER_MODEL, verbose_name='Field Engineer')),
                ('feeds', models.ManyToManyField(blank=True, related_name='feeding', to='geomap.Property', verbose_name='Fed from')),
                ('gpon_feed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gpon_feeds', to='geomap.Property', verbose_name='GPON from')),
                ('gponeng', models.ForeignKey(blank=True, limit_choices_to=models.Q(groups__name='GPONENG'), null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gponeng', to=settings.AUTH_USER_MODEL, verbose_name='GPON Engineer')),
                ('neteng', models.ForeignKey(blank=True, limit_choices_to=models.Q(groups__name='NETENG'), null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='neteng', to=settings.AUTH_USER_MODEL, verbose_name='Network Engineer')),
                ('pm', models.ForeignKey(blank=True, limit_choices_to=models.Q(groups__name='PM'), null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pm', to=settings.AUTH_USER_MODEL, verbose_name='PM')),
            ],
            options={
                'verbose_name_plural': 'Properties',
            },
        ),
        migrations.AddField(
            model_name='file',
            name='property',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to='geomap.Property'),
        ),
    ]
